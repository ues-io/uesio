{
  "name": "platform",
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "projectType": "application",
  "sourceRoot": "apps/platform",
  "targets": {
    "build": {
      "executor": "nx:run-commands",
      "options": {
        "command": "go build -o {args.outputPath} main.go",
        "cwd": "{projectRoot}",
        "outputPath": "../../dist/platform/uesio"
      },
      "inputs": ["golang", "default", "^production", "sharedGlobals"],
      "outputs": ["{options.outputPath}"]
    },
    "format": {
      "dependsOn": ["format:write"]
    },
    "format:write": {
      "dependsOn": ["gofmt:write", "tidy:write"]
    },
    "format:check": {
      "dependsOn": ["gofmt:check", "tidy:check"]
    },
    "gofmt:write": {
      "executor": "nx:run-commands",
      "options": {
        "command": "gofmt -l -w -s -e .",
        "cwd": "{projectRoot}"
      },
      "inputs": ["golang", "default", "^production", "sharedGlobals"],
      "cache": true
    },
    "gofmt:check": {
      "executor": "nx:run-commands",
      "options": {
        "command": "output=\"$(gofmt -d -e .)\" && echo \"$output\" && test -z \"$output\"",
        "cwd": "{projectRoot}"
      },
      "inputs": ["golang", "default", "^production", "sharedGlobals"],
      "cache": true
    },
    "lint": {
      "dependsOn": ["vet"]
    },
    "seed": {
      "executor": "nx:run-commands",
      "options": {
        "command": "go run main.go seed",
        "cwd": "{projectRoot}"
      },
      "dependsOn": ["vendor:build"]
    },
    "migrate-db": {
      "executor": "nx:run-commands",
      "options": {
        "command": "go run main.go migrate",
        "cwd": "{projectRoot}"
      },
      "dependsOn": ["vendor:build"]
    },
    "serve": {
      "executor": "nx:run-commands",
      "options": {
        "command": "go run main.go serve",
        "cwd": "{projectRoot}"
      },
      "dependsOn": [{ "projects": "tag:type:platform-dep", "target": "build" }]
    },
    "worker": {
      "executor": "nx:run-commands",
      "options": {
        "command": "go run main.go worker",
        "cwd": "{projectRoot}"
      },
      "dependsOn": ["vendor:build"]
    },
    "build-image": {
      "executor": "nx:run-commands",
      "options": {
        "command": "docker build --tag uesio-dev:latest -f ./apps/platform/Dockerfile .",
        "cwd": "{workspaceRoot}"
      },
      "dependsOn": [{ "projects": "tag:type:platform-dep", "target": "build" }]
    },
    "serve-image": {
      "executor": "nx:run-commands",
      "options": {
        "command": "docker compose -f docker-compose.yaml -f docker-compose-local.yaml up -d --build",
        "cwd": "{workspaceRoot}"
      },
      "dependsOn": [{ "projects": "tag:type:platform-dep", "target": "build" }]
    },
    "test": {
      "executor": "nx:run-commands",
      "options": {
        "command": "go test -v ./...",
        "cwd": "{projectRoot}"
      },
      "dependsOn": ["vendor:build", "ui:build"],
      "inputs": ["golang", "default", "^production", "sharedGlobals"]
    },
    "tidy:write": {
      "executor": "nx:run-commands",
      "options": {
        "command": "go mod tidy",
        "cwd": "{projectRoot}"
      },
      "inputs": ["golang", "default", "^production", "sharedGlobals"],
      "cache": true
    },
    "tidy:check": {
      "executor": "nx:run-commands",
      "options": {
        "command": "go mod tidy -diff",
        "cwd": "{projectRoot}"
      },
      "inputs": ["golang", "default", "^production", "sharedGlobals"],
      "cache": true
    },
    "vet": {
      "executor": "nx:run-commands",
      "options": {
        "command": "go vet ./...",
        "cwd": "{projectRoot}"
      },
      "inputs": ["golang", "default", "^production", "sharedGlobals"],
      "cache": true
    },
    "watch-deps": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "mkdir -p .watch",
          "nx watch -p tag:type:platform-dep  -- \"date && nx run-many -t build -p \\$NX_PROJECT_NAME && date > .watch/nxwatch.log\""
        ],
        "cwd": "{projectRoot}"
      }
    },
    "serve:watch": {
      "executor": "nx:run-commands",
      "options": {
        "commands": ["air serve", "nx run platform:watch-deps"],
        "cwd": "{projectRoot}",
        "parallel": true
      },
      "dependsOn": [{ "projects": "tag:type:platform-dep", "target": "build" }]
    },
    "dev": {
      "executor": "nx:run-commands",
      "continuous": true,
      "options": {
        "command": "bash ./scripts/dev.sh",
        "cwd": "{projectRoot}"
      },
      "dependsOn": [
        { "projects": "tag:type:platform-dep", "target": "build" },
        "start-deps"
      ]
    },
    "wait-for-dev": {
      "executor": "nx:run-commands",
      "dependsOn": [
        {
          "target": "dev",
          "params": "forward"
        }
      ],
      "options": {
        "commands": ["bash ./scripts/wait-for-dev.sh"],
        "cwd": "{projectRoot}",
        "forwardAllArgs": false
      }
    },
    "setup-ssl": {
      "executor": "nx:run-commands",
      "options": {
        "command": "bash ./create.sh",
        "cwd": "{projectRoot}/ssl"
      }
    },
    "start-deps": {
      "executor": "nx:run-commands",
      "options": {
        "command": "docker compose -f docker-compose.yaml up -d --wait",
        "cwd": "{workspaceRoot}"
      }
    }
  },
  "tags": [],
  "implicitDependencies": []
}
