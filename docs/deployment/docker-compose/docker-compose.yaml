name: "uesio_sample"

services:
  redis:
    image: "valkey/valkey:alpine"
    healthcheck:
      test: ["CMD", "valkey-cli", "ping"]
      interval: 5s
      timeout: 10s
      retries: 4
      start_period: 10s
  db:
    image: "postgres:17"
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: pgtest
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 10s
      retries: 4
      start_period: 10s
  app:
    image: "ghcr.io/ues-io/uesio:latest"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      healthcheck:
        # Intentionally using localhost:$${UESIO_PORT} since container will not have DNS entries for localhost or *.localhost and this command is executed from within
        # the container itself.  wget does not automatically resolve localhost/*.localhost to 127.0.0.1 like browsers, curl, etc. do so this is required for the
        # purpose of health check only.
        test: ["CMD-SHELL", 'wget -q --no-check-certificate $(if [ "$${UESIO_USE_HTTPS}" = "true" ]; then echo "https"; else echo "http"; fi)://localhost:$${UESIO_PORT}/health']
        interval: 5s
        timeout: 10s
        retries: 4
        start_period: 10s
    ports:
      - "3000:3000"
    environment:
      UESIO_REDIS_HOST: redis
      UESIO_DB_DATABASE: pgtest
      UESIO_DB_HOST: db
      UESIO_DB_USER: postgres
      UESIO_DB_PASSWORD: postgres
      UESIO_SESSION_STORE: redis
      UESIO_PLATFORM_CACHE: redis
      UESIO_USAGE_HANDLER: redis
      UESIO_USE_HTTPS: "${UESIO_USE_HTTPS:-false}"
      UESIO_PORT: "${UESIO_PORT:-3000}"
      UESIO_PRIMARY_DOMAIN: "${UESIO_PRIMARY_DOMAIN:-uesio.localhost}"
      # In order to sign-up for a new account, you need to setup https://resend.com to support email notifications. In lieu of
      # that, UESIO_MOCK_AUTH can be used to allow login with Mock users.  When resend is configured, UESIO_MOCK_AUTH can be
      # set to false.
      UESIO_MOCK_AUTH: "true"
      #UESIO_SECRET_UESIO_APPKIT_RESEND_KEY: "${UESIO_SECRET_UESIO_APPKIT_RESEND_KEY:?UESIO_SECRET_UESIO_APPKIT_RESEND_KEY is required}"
    command:
      - /bin/sh
      - -c
      - |
        if [ "$${UESIO_USE_HTTPS}" = "true" ]; then 
          cp /ssl/certificate.crt /usr/local/share/ca-certificates && 
          update-ca-certificates
        fi && 
        ./uesio migrate && 
        ./uesio seed && 
        ./uesio serve
