name: Deploy to AWS DEV
#on:
#    push:
#        branches:
#            - master
on: workflow_dispatch
jobs:
    build:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [16.x]
                go-version: [~1.19]
        steps:
            - uses: actions/checkout@v2
              with:
                  fetch-depth: 0
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}
            - name: Use Go ${{ matrix.go-version }}
              uses: actions/setup-go@v2
              with:
                  go-version: ${{ matrix.go-version }}
              id: go
            - name: Cache ~/.npm
              uses: actions/cache@v2
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-
            - name: Install npm Dependencies
              run: npm ci
            - name: Cache ./node_modules/.cache for nx usage
              uses: actions/cache@v2
              with:
                  path: ./node_modules/.cache
                  key: ${{ runner.os }}-${{ matrix.node-version }}-node-cache-${{ hashFiles('./*.json') }}-${{ github.ref }}
                  restore-keys: |
                      ${{ runner.os }}-${{ matrix.node-version }}-node-cache-${{ hashFiles('./*.json') }}
                      ${{ runner.os }}-${{ matrix.node-version }}-node-cache-
            - name: Cache Go modules
              uses: actions/cache@v2
              with:
                  path: ~/go/pkg/mod
                  key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
                  restore-keys: |
                      ${{ runner.os }}-go-
            - name: Run Build all resources
              shell: bash
              run: npm run build-all -- --skip-nx-cache
            - name: Build image
              run: npm run nx -- build-image platform
            # Now run steps to deploy to AWS
            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
                  aws-region: ${{ secrets.AWS_REGION_DEV }}
            - name: Login to Amazon ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v1
            - name: Tag image to Amazon ECR
              run: |
                  docker tag uesio:latest ${{ secrets.ECR_REGISTRY_DEV }}/uesio:latest
            - name: Push image to Amazon ECR
              run: |
                  docker push ${{ secrets.ECR_REGISTRY_DEV }}/uesio:latest
