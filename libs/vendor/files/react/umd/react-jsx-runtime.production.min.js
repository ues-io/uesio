// This is a kind of insane way of adding the jsx runtime into ues.io
// Here is how I came up with this code...
// 1. Start with the file in node_modules/react/cjs/react-jsx-runtime.pruduction.min.js
// 2. Replace require("react") with window.React
// 3. Replace the exports with window.jsxRuntime
// 4. Then in esbuild, add an external package that points "react/jsx-runtime" to jsxRuntime

var f = window.React,
  k = Symbol.for("react.element"),
  l = Symbol.for("react.fragment"),
  m = Object.prototype.hasOwnProperty,
  n = f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,
  p = { key: !0, ref: !0, __self: !0, __source: !0 }
function q(c, a, g) {
  var b,
    d = {},
    e = null,
    h = null
  void 0 !== g && (e = "" + g)
  void 0 !== a.key && (e = "" + a.key)
  void 0 !== a.ref && (h = a.ref)
  for (b in a) m.call(a, b) && !p.hasOwnProperty(b) && (d[b] = a[b])
  if (c && c.defaultProps)
    for (b in ((a = c.defaultProps), a)) void 0 === d[b] && (d[b] = a[b])
  return { $$typeof: k, type: c, key: e, ref: h, props: d, _owner: n.current }
}

//exports.Fragment = l
//exports.jsx = q
//exports.jsxs = q

window.jsxRuntime = {
  Fragment: l,
  jsx: q,
  jsxs: q,
}
