name: credentialentrieseditor
definition:
  wires:
    newCredentialEntry:
      viewOnly: true
      init:
        query: false
        create: true
      fields:
        name:
          type: TEXT
          label: Entry Name
        value:
          type: TEXT
          label: Value
        type:
          type: SELECT
          label: Value Source
          selectlist:
            name: uesio/core.credentialentrytypes
        secret:
          type: METADATA
          label: Secret Name
          metadata:
            type: SECRET
        configValue:
          type: METADATA
          label: Config Value Name
          metadata:
            type: CONFIGVALUE
        merge:
          type: TEXT
          label: Merge
      defaults:
        - valueSource: VALUE
          field: type
          value: configvalue
      events:
        - type: onChange
          fields:
            - secret
          signals:
            - signal: wire/UPDATE_RECORD
              field: value
              value: ${secret}
        - type: onChange
          fields:
            - configValue
          signals:
            - signal: wire/UPDATE_RECORD
              field: value
              value: ${configValue}
        - type: onChange
          fields:
            - merge
          signals:
            - signal: wire/UPDATE_RECORD
              field: value
              value: ${merge}
  components:
    - uesio/io.titlebar:
        title: Essential Credential Entries
        uesio.styleTokens:
          root:
            - mt-4
        uesio.display:
          - type: fieldValue
            field: uesio/studio.type
            operator: IN
            values:
              - API_KEY
              - AWS_KEY
              - AWS_ASSUME_ROLE
              - OAUTH2_CREDENTIALS
              - SAML_CREDENTIALS
              - USERNAME_PASSWORD
              - POSTGRESQL_CONNECTION
    - uesio/io.field:
        fieldId: uesio/studio.api_key->key
        uesio.display:
          - field: uesio/studio.type
            value: API_KEY
    - uesio/io.field:
        fieldId: uesio/studio.api_key->location
        uesio.display:
          - field: uesio/studio.type
            value: API_KEY
    - uesio/io.field:
        fieldId: uesio/studio.api_key->locationName
        label: Header Name
        uesio.display:
          - field: uesio/studio.type
            value: API_KEY
          - field: uesio/studio.api_key->location
            value: header
    - uesio/io.field:
        fieldId: uesio/studio.api_key->locationName
        label: Query String Parameter Name
        uesio.display:
          - field: uesio/studio.type
            value: API_KEY
          - field: uesio/studio.api_key->location
            value: querystring
    - uesio/io.field:
        fieldId: uesio/studio.api_key->locationValue
        placeholder: "${apikey}"
        uesio.display:
          - field: uesio/studio.type
            value: API_KEY
    - uesio/io.field:
        fieldId: uesio/studio.aws_key
        label: " "
        uesio.display:
          - field: uesio/studio.type
            value: AWS_KEY
    - uesio/io.field:
        fieldId: uesio/studio.aws_assume_role
        label: " "
        uesio.display:
          - field: uesio/studio.type
            value: AWS_ASSUME_ROLE
    - uesio/io.field:
        fieldId: uesio/studio.oauth2
        label: " "
        uesio.display:
          - field: uesio/studio.type
            value: OAUTH2_CREDENTIALS
    - uesio/io.field:
        fieldId: uesio/studio.saml
        label: " "
        uesio.display:
          - field: uesio/studio.type
            value: SAML_CREDENTIALS
    - uesio/io.field:
        fieldId: uesio/studio.username_password
        label: " "
        uesio.display:
          - field: uesio/studio.type
            value: USERNAME_PASSWORD
    - uesio/io.field:
        fieldId: uesio/studio.postgresql_connection
        label: " "
        uesio.display:
          - field: uesio/studio.type
            value: POSTGRESQL_CONNECTION
    - uesio/io.titlebar:
        title: Additional Credential Entries
        uesio.display:
          - type: paramValue
            param: allowCustomEntryAdditions
            operator: EQUALS
            value: true
          - field: uesio/studio.type
            operator: "NOT_EQUALS"
            value: ""
          - type: hasValue
            value: ${uesio/studio.type}
        uesio.styleTokens:
          root:
            - mt-10
        actions:
          - uesio/io.group:
              components:
                - uesio/io.button:
                    text: Add Entry
                    uesio.variant: uesio/io.secondary
                    uesio.display:
                      - type: fieldMode
                        mode: EDIT
                      - type: mergeValue
                        value: $Param{app}
                        sourceValue: $Param{namespace}
                    signals:
                      - signal: wire/RESET
                        wire: newCredentialEntry
                      - signal: panel/TOGGLE
                        panel: newCredentialEntry
    - uesio/io.titlebar:
        title: Credential Entries
        uesio.display:
          - type: paramValue
            param: allowCustomEntryAdditions
            operator: EQUALS
            value: true
          - type: group
            conjunction: OR
            conditions:
              - field: uesio/studio.type
                operator: "EQUALS"
                value: ""
              - type: hasNoValue
                value: ${uesio/studio.type}
        actions:
          - uesio/io.group:
              components:
                - uesio/io.button:
                    text: Add Entry
                    uesio.variant: uesio/io.primary
                    uesio.display:
                      - type: mergeValue
                        value: $Param{app}
                        sourceValue: $Param{namespace}
                    signals:
                      - signal: wire/RESET
                        wire: newCredentialEntry
                      - signal: panel/TOGGLE
                        panel: newCredentialEntry
        uesio.styleTokens:
          root:
            - mt-10
    - uesio/io.field:
        fieldId: uesio/studio.entries
        label: " "
        uesio.display:
          - type: paramValue
            param: allowCustomEntryAdditions
            operator: EQUALS
            value: true
        map:
          noAdd: true
          keyFieldLabel: Expected Entry Name
          valueFieldLabel: Entry Details
  panels:
    newCredentialEntry:
      uesio.type: uesio/io.dialog
      title: Add Credential Entry
      width: 500px
      height: 600px
      components:
        - uesio/io.item:
            uesio.context:
              workspace:
                name: $Param{workspacename}
                app: $Param{app}
            uesio.id: newcredentialEntryItem
            wire: newCredentialEntry
            mode: EDIT
            components:
              - uesio/io.field:
                  fieldId: name
              - uesio/io.field:
                  fieldId: type
              - uesio/io.field:
                  fieldId: secret
                  uesio.display:
                    - type: fieldValue
                      wire: newCredentialEntry
                      field: type
                      value: secret
              - uesio/io.field:
                  fieldId: configValue
                  uesio.display:
                    - type: fieldValue
                      wire: newCredentialEntry
                      field: type
                      value: configvalue
              - uesio/io.field:
                  fieldId: merge
                  uesio.display:
                    - type: fieldValue
                      wire: newCredentialEntry
                      field: type
                      value: merge
      actions:
        - uesio/io.button:
            uesio.variant: uesio/io.primary
            text: Add Entry
            signals:
              - signal: wire/UPDATE_FIELDS
                wire: credentials
                fields:
                  - field: uesio/studio.entries->$Record{newCredentialEntry:name}->type
                    value: $Record{newCredentialEntry:type}
                  - field: uesio/studio.entries->$Record{newCredentialEntry:name}->value
                    value: $Record{newCredentialEntry:value}
              - signal: panel/TOGGLE
                panel: newCredentialEntry
        - uesio/io.button:
            uesio.variant: uesio/io.secondary
            text: $Label{uesio/io.cancel}
            signals:
              - signal: wire/CANCEL
                wire: newCredentialEntry
              - signal: panel/TOGGLE
                panel: newCredentialEntry
  params:
    allowCustomEntryAdditions:
      type: CHECKBOX
    app:
      type: TEXT
    namespace:
      type: TEXT
    workspacename:
      type: TEXT
