######################################################
# Tests object and field level security enforcement 
# on wire loads, for a public user
######################################################

# Object level security -- we should NOT be able to query wire_condition
# because the public profile has no access to it
POST https://tests.{{domain}}:{{port}}/site/wires/load
Accept: application/json
{
    "wires": [
        {
            "collection":"uesio/tests.wire_condition",
            "name": "noAccess",
            "fields": [
                {"id":"uesio/core.uniquekey"},
                {"id":"uesio/tests.name"}
            ],
            "query": true
        }
    ]
}
HTTP 400
[Asserts]
body contains "Load Failed: Profile uesio/tests.public does not have read access to the uesio/tests.wire_condition collection."

# Object level security -- we SHOULD be able to query the animal collection
# because the public profile DOES have access to it
POST https://tests.{{domain}}:{{port}}/site/wires/load
Accept: application/json
{
    "wires": [
        {
            "collection":"uesio/tests.animal",
            "name": "hasAccess",
            "fields": [
                {"id":"uesio/core.uniquekey"},
                {"id":"uesio/tests.genus"},
                {"id":"uesio/tests.species"}
            ],
            "batchsize": 1,
            "query": true,
            "conditions": [
                { "field": "uesio/tests.genus", "operator": "EQ", "value": "Mouton" }
            ]
        }
    ]
}
HTTP 200
[Captures]
animal_id: jsonpath "$.wires[0].data[0]['uesio/core.id']"
[Asserts]
jsonpath "$.wires[0].data" count == 1
jsonpath "$.wires[0].data[0]['uesio/tests.species']" == "Abrahan"

# Object security in routes - we SHOULD be able to query the animal collection via a route load
# for a route with a wire on our requested collection
GET https://tests.{{domain}}:{{port}}/site/routes/path/uesio/tests/publicanimalslist
Accept: application/json
HTTP 200
[Asserts]
jsonpath "$.dependencies.wire.entities[*].data[0]['uesio/tests.species']" nth 0 == "Abrahan"
jsonpath "$.dependencies.wire.entities[*].data[0]['uesio/tests.genus']" nth 0 == "Mouton"
jsonpath "$.dependencies.wire.entities[*]['debugQueryString']" nth 0 == ```
SELECT
main.fields->>'uesio/tests.genus' AS "uesio/tests.genus",
main.fields->>'uesio/tests.species' AS "uesio/tests.species",
main.id::text AS "uesio/core.id",
main.uniquekey AS "uesio/core.uniquekey"
FROM data as "main"
WHERE
main.collection = $1 AND
main.tenant = $2 AND
main.fields->>'uesio/tests.genus' = $3
LIMIT 3```

# Object level security -- SAVE -- EDIT
# We should NOT be able to EDIT animal records
# because the public profile does not have permission to edit them
POST https://tests.{{domain}}:{{port}}/site/wires/save
Content-Type: application/json
{
    "wires": [
        {
            "wire": "updateanimals",
            "collection": "uesio/tests.animal",
            "changes": {
                "1": {
                    "uesio/core.id": "{{animal_id}}",
                    "uesio/tests.genus": "Mouton",
                    "uesio/tests.species": "Abrahan",
                    "uesio/tests.total_population": 1
                }
            },
            "upsert": false
        }
    ]
}
HTTP 400
[Asserts]
body contains "Save Failed: Profile uesio/tests.public does not have edit access to the uesio/tests.animal collection."

# Object level security -- SAVE -- DELETE
# We should NOT be able to DELETE animal records
# because the public profile does not have permission to delete them
POST https://tests.{{domain}}:{{port}}/site/wires/save
Content-Type: application/json
{
    "wires": [
        {
            "wire": "deleteanimals",
            "collection": "uesio/tests.animal",
            "deletes": {
                "1": {
                    "uesio/core.id": "{{animal_id}}"
                }
            }
        }
    ]
}
HTTP 400
[Asserts]
body contains "Save Failed: Profile uesio/tests.public does not have delete access to the uesio/tests.animal collection."

# Object level security -- SAVE -- CREATE
# We SHOULD be able to CREATE animal records
# because the public profile DOES have permission to create them
POST https://tests.{{domain}}:{{port}}/site/wires/save
[Options]
variable: genus="Choloepus {{unix_epoch_seconds}}"
variable: species="Didactylus {{unix_epoch_seconds}}"
{
    "wires": [
        {
            "wire": "createanimals",
            "collection": "uesio/tests.animal",
            "changes": {
                "1": {
                    "uesio/tests.genus": "{{genus}}",
                    "uesio/tests.species": "{{species}}"
                }
            },
            "upsert": true
        }
    ]
}
HTTP 200
[Asserts]
jsonpath "$.wires[0].errors" == null
jsonpath "$.wires[0].changes[*]['uesio/core.id']" nth 0 != null
jsonpath "$.wires[0].changes[*]['uesio/core.uniquekey']" nth 0 == "{{genus}}:{{species}}"

# Object level security -- SAVE -- CREATE
# We should NOT be able to CREATE wire_condition records
# because the public profile does not have permission to create them
POST https://tests.{{domain}}:{{port}}/site/wires/save
Content-Type: application/json
{
    "wires": [
        {
            "wire": "create_wire_conditions",
            "collection": "uesio/tests.wire_condition",
            "changes": {
                "1": {
                    "uesio/tests.name": "some name"
                }
            },
            "upsert": false
        }
    ]
}
HTTP 400
[Asserts]
body contains "Save Failed: Profile uesio/tests.public does not have create access to the uesio/tests.wire_condition collection."

# FIELD level security -- SAVE -- CREATE
# We should NOT be able to CREATE animal records
# if we are populating fields which we do not have access to
POST https://tests.{{domain}}:{{port}}/site/wires/save
Content-Type: application/json
{
    "wires": [
        {
            "wire": "create_animals_with_forbidden_fields",
            "collection": "uesio/tests.animal",
            "changes": {
                "1": {
                    "uesio/tests.genus": "Not relevant",
                    "uesio/tests.species": "Ignored",
                    "uesio/tests.total_population": 100,
                    "uesio/tests.status": "FORBIDDEN FIELD"
                }
            },
            "upsert": false
        }
    ]
}
HTTP 200
[Asserts]
jsonpath "$.wires[0].errors[0].message" == "Profile uesio/tests.public does not have edit access to the uesio/tests.status field."