# See http://help.github.com/ignore-files/ for more about ignoring files.

# compiled output
/dist
/tmp
/out-tsc

# dependencies
/node_modules

# IDEs and editors
apps/.idea
/.idea
**/*.idea
.project
.classpath
.c9/
*.launch
.settings/
*.sublime-workspace
*.code-workspace

# IDE - VSCode
**/.vscode/*
.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json

# misc
/.sass-cache
/connect.lock
/coverage
/libpeerconnection.log
npm-debug.log
yarn-error.log
testem.log
/typings

# System Files
.DS_Store
Thumbs.db

*.in
*.out
*.env
myenv.ps1
.google-creds.json
pgdata
/bundles/
/static/
/temp/
/ssl/certificate.crt
/ssl/private.key
sessions/*
ui-debug.log
firestore-debug.log
firestore.indexes.json
firestore.rules
firebase.json
firebase-debug.log
.firebaserc
__debug_bin

# Uesio binaries
**/.uesio
/uesio

# Uesio Component Packs and Types
**/bundle/componentpacks/*/dist/

# Cypress
**/cypress/downloads
**/cypress/screenshots
**/cypress/videos

# Ad-hoc query results
queries/results

# Nx
.nx/cache
.nx/workspace-data
.cursor/rules/nx-rules.mdc
.github/instructions/nx.instructions.md

# Go
# See comment in ./go.work regarding why go.work.sum is ignored
go.work.sum

# CI workflows cache go which creates a go-build-cache directory that contains packages that contain package.json files
# so whenever nx is run, it "thinks" they are "projects" in the nx workspace and then fails to parse them (e.g., they
# do not have a "name" property).  The below could be included in a .nxignore file since the problem is nx specific,
# however putting here instead because we would also never want to commit these files if we ever committed in
# our workflows.
/go-build-cache

# Valkey
/valkey
